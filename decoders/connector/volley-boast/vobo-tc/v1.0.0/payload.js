/* istanbul ignore next */
function toTagoFormat(bytes, fport) {
    return customDecoder(bytes, fport);
}

function customDecoder(bytes, fport) {
    var decoded = Decoder(bytes, fport);
    //=======================================================
    // Insert your customization here
    if (fport == 31) {
        var tagoDecoded = [
            {
                variable: decoded.data.analogSensorString0.replaceAll(" ", "_"),
                value: decoded.data.sensorData0,
                unit: decoded.data.engUnitsString0
            }
        ];        
        tagoDecoded.push(
            { variable: "fport", value: decoded.data.fport },
            { variable: "voboType", value: decoded.data.voboType },
            { variable: "payloadType", value: decoded.data.payloadType }
        );

    }
    else if (fport == 41) {
        var tagoDecoded = [
            {
                variable: decoded.data.analogSensorString0.replaceAll(" ", "_"),
                value: decoded.data.sensorData0,
                unit: decoded.data.engUnitsString0
            },
            {
                variable: decoded.data.analogSensorString1.replaceAll(" ", "_"),
                value: decoded.data.sensorData1,
                unit: decoded.data.engUnitsString1
            }
        ];  
        tagoDecoded.push(
            { variable: "fport", value: decoded.data.fport },
            { variable: "voboType", value: decoded.data.voboType },
            { variable: "payloadType", value: decoded.data.payloadType }
        );
    }
    else if (fport == 51) {
        var tagoDecoded = decoded.data.digitalSensorStrings.map((sensor, index) => ({
            variable: sensor,
            value: decoded.data.digitalSensorData[index]
        }));
        tagoDecoded.push(
            { variable: "fport", value: decoded.data.fport },
            { variable: "voboType", value: decoded.data.voboType },
            { variable: "payloadType", value: decoded.data.payloadType }
        );
    }
    else if (fport == 111) {
        var tagoDecoded = decoded.data.ainPayloads.map((payloadObj, index) => ({
            variable: decoded.data[`analogSensorString${index}`].replaceAll(" ", "_"),
            value: payloadObj.sensorData0,
            unit: decoded.data[`engUnitsString${index}`]
        }));
        tagoDecoded.push(
            { variable: "fport", value: decoded.data.fport },
            { variable: "voboType", value: decoded.data.voboType },
            { variable: "payloadType", value: decoded.data.payloadType }
        );
    }
    else {
        var tagoDecoded = Object.entries(decoded.data).map(([key, value]) => ({
            variable: key,
            value: value,
        }));
    }
    //=======================================================
    return tagoDecoded;
}

const DECODER_MAJOR_VERSION=2,DECODER_MINOR_VERSION=2,DECODER_PATCH_VERSION=1;function decodeUplink(a){return Decoder(a.bytes,a.fPort)}
function Decoder(a,b){var c={},d=[];1==b?c=parseStandardPayload(a):2<=b&&9>=b?c=parseModbusStandardPayload(a,b):10==b?c=parseHeartbeat1p0Payload(a):20<=b&&29>=b?c=parseHeartbeat2p0Payload(a):30<=b&&39>=b?c=parseOneAnalogSensorPayload(a):40<=b&&49>=b?c=parseTwoAnalogSensorsPayload(a):50<=b&&59>=b?c=parseDigitalSensorsPayload(a):60<=b&&69>=b?c=parseEventLogPayload(a):70<=b&&79>=b?c=parseConfigurationPayload(a,b):80<=b&&89>=b?c=parseEventLogPayload(a):100<=b&&109>=b?c=parseModbusGenericPayload(a,b):
110<=b&&119>=b?c=parseAnalogInputVariableLengthPayload(a,b):120<=b&&129>=b?c=parseModbusStandardVariableLengthPayload(a,b):d.push("unknown FPort");a=addVoboMetadata(c,b);a.warnings=[];a.errors=d;return a}
function addVoboMetadata(a,b){var c={};c.data=a;var d=a="",e=b%10;0==e||1<=b&&10>b?a="VoBoXX":1==e?a="VoBoTC":2==e&&(a="VoBoXP");if(1==b)d="Standard";else if(2<=b&&9>=b)d="Modbus Standard";else if(10==b)d="Heartbeat 1.0";else if(20<=b&&29>=b)d="Heartbeat 2.0";else if(30<=b&&39>=b)d="One Analog Input",c.data.analogSensorString0=lookupAnalogSensorName(a,c.data.sensorNum0),c.data.engUnitsString0=lookupUnits(1,c.data.sensorUnits0);else if(40<=b&&49>=b)d="Two Analog Inputs",c.data.analogSensorString0=
lookupAnalogSensorName(a,c.data.sensorNum0),c.data.engUnitsString0=lookupUnits(1,c.data.sensorUnits0),c.data.analogSensorString1=lookupAnalogSensorName(a,c.data.sensorNum1),c.data.engUnitsString1=lookupUnits(1,c.data.sensorUnits1);else if(50<=b&&59>=b)for(d="Digital Inputs",c.data.digitalSensorStrings=[],c.data.digitalSensorData=[],e=0;16>e;e++)1==(c.data.sensorValid0>>e&1)&&(c.data.digitalSensorStrings.push(lookupDigitalSensorName(a,e)),c.data.digitalSensorData.push(c.data.sensorData0>>e&1));else if(60<=
b&&69>=b)d="Event Log";else if(70<=b&&79>=b)d="Configuration";else if(80<=b&&89>=b)d="Notification";else if(100<=b&&109>=b)d="Modbus Generic";else if(110<=b&&119>=b)for(d="Analog Input Variable Length",e=0;e<c.data.numOfAinPayloads;e++)c.data["analogSensorString"+e]=lookupAnalogSensorName(a,c.data.ainPayloads[e].sensorNum0),c.data["engUnitsString"+e]=lookupUnits(1,c.data.ainPayloads[e].sensorUnits0);else 120<=b&&129>=b&&(d="Modbus Standard Variable Length");c.data.fport=b;c.data.voboType=a;c.data.payloadType=
d;return c}function parseStandardPayload(a){var b={};b.DIN1=a[0]&1;b.DIN2=a[0]>>1&1;b.DIN3=a[0]>>2&1;b.WKUP=a[0]>>3&1;b.ADC1=(a[0]&240)>>4|a[1]<<4;b.ADC2=(a[3]&15)<<8|a[2];b.ADC3=(a[3]&240)>>4|a[4]<<4;b.Battery=4*((a[6]&15)<<8|a[5]);b.Temperature=0==(a[7]>>7&1)?.125*((a[6]&240)>>4|a[7]<<4):-.125*(4096-((a[6]&240)>>4|a[7]<<4));b.Modbus0=a[9]<<8|a[8];return b}
function parseModbusStandardPayload(a,b){b=5*(b-1)-4;var c={};c["Modbus"+b++]=a[1]<<8|a[0];c["Modbus"+b++]=a[3]<<8|a[2];c["Modbus"+b++]=a[5]<<8|a[4];c["Modbus"+b++]=a[7]<<8|a[6];c["Modbus"+b]=a[9]<<8|a[8];return c}
function parseHeartbeat1p0Payload(a){var b={};b.batteryLevelMV=4*((a[1]&15)<<8|a[0]);b.fwVersionMajor=a[2]&15|(a[1]&240)>>4;b.fwVersionMinor=a[3]&15|(a[2]&240)>>4;b.fwVersionPatch=a[4]&15|(a[3]&240)>>4;b.fwVersionCustom=(a[4]&240)>>4;b.recSignalLevels=-1*a[5];b.analogVoltageConfig=a[6]&31;b.analogPowerTimeConfig=parseFloat((((a[7]&31)<<3|(a[6]&224)>>5)/10).toFixed(1));b.failedTransmissionBeforeRejoinConfig=(a[8]&1)<<3|(a[7]&224)>>5;b.cycleThroughFSB=(a[8]&2)>>1;b.ackEnable=(a[8]&4)>>2;b.ackFreq=(a[8]&
120)>>3;b.ackReq=(a[9]&7)<<1|(a[8]&128)>>7;b.batteryLevelThreshold=4*((a[10]&127)<<5|(a[9]&248)>>3);return b}
function parseHeartbeat2p0Payload(a){var b={};b.batteryLevel=(a[1]&15)<<8|a[0];b.fatalErrorsTotal=(a[1]&240)>>4;b.rssiAvg=a[2];b.failedJoinAttemptsTotal=a[3]&127;b.configUpdateOccurred=(a[3]&128)>>7;b.firmwareRevision=(a[5]&3)<<8|a[4];b.rebootsTotal=(a[5]&28)>>2;b.failedTransmitsTotal=(a[5]&224)>>5;b.errorEventLogsTotal=a[6];b.warningEventLogsTotal=a[7];b.infoEventLogsTotal=a[8];b.measurementPacketsTotal=a[10]<<8|a[9];return b}
function bytesToFloat32(a){var b=new ArrayBuffer(4),c=new Uint8Array(b);c[0]=a[0];c[1]=a[1];c[2]=a[2];c[3]=a[3];return(new DataView(b)).getFloat32(0,!1)}function parseOneAnalogSensorPayload(a){var b={};b.sensorNum0=a[0];b.sensorUnits0=a[1];b.sensorData0=bytesToFloat32(a.slice(2,6));return b}
function parseTwoAnalogSensorsPayload(a){var b={};b.sensorNum0=(a[0]&240)>>4;b.sensorUnits0=a[1];b.sensorData0=bytesToFloat32(a.slice(2,6));b.sensorNum1=a[0]&15;b.sensorUnits1=a[6];b.sensorData1=bytesToFloat32(a.slice(7,11));return b}function parseDigitalSensorsPayload(a){var b={};b.sensorValid0=a[1]<<8|a[0];b.sensorData0=a[3]<<8|a[2];return b}
function parseEventLogPayload(a){var b={};b.eventTimestamp=a[0]+a[1]*Math.pow(2,8)+a[2]*Math.pow(2,16)+a[3]*Math.pow(2,24);b.eventCode=a[4]+a[5]*Math.pow(2,8);b.metadata=Array.prototype.slice.call(a.slice(6,11),0);return b}
function parseVoboLibGeneralConfigurationPayload(a,b){var c={};c.subgroupID=a[0]&15;c.sequenceNumber=(a[0]&240)>>4;0==c.sequenceNumber&&(c.transRejoin=a[1]&15,c.ackFrequency=(a[1]&240)>>4,70==b||71==b?c.lowBattery=parseFloat(((a[2]&15)/10+2.5).toFixed(1)):72==b&&(c.lowVoltThreshold=parseFloat(((a[2]&15)/10+2.5).toFixed(1))),c.reserved1=(a[2]&16)>>4,c.heartbeatAckEnable=!!((a[2]&32)>>5),c.operationMode=(a[2]&64)>>6,c.cycleSubBands=!!((a[2]&128)>>7),c.ackRetries=a[3]&7,c.reservedLL=(a[3]&56)>>3,c.ackEnable=
!!((a[3]&64)>>6),c.heartbeatEnable=!!((a[3]&128)>>7),c.cycleTime=(a[6]&3)<<16|a[5]<<8|a[4],c.backOffReset=(a[6]&252)>>2,c.reservedRD=a[7]&63,c.reserved2=(a[7]&192)>>6,c.resendAttempts=a[8]&15,c.freqSubBand=(a[8]&240)>>4);if(1==c.sequenceNumber){c.timeSyncInterval=a[1];c.joinEUI="";for(b=9;2<=b;b--)c.joinEUI+=a[b].toString(16).toUpperCase().padStart(2,0),2!=b&&(c.joinEUI+="-");c.joinNonceResetEnable=!!(a[10]&1);c.timeSyncWakeupEnable=!!((a[10]&2)>>1);c.reserved1=(a[10]&252)>>2}return c}
function parseVoboLibVoboSyncConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber&&(b.vbsNodeNumber=a[2]<<8|a[1],b.vbsTimeReference=a.slice(3,7).readUInt32LE(),b.reservedVCPDS=a[7]&15,b.reservedVMPDS=(a[7]&240)>>4,b.reservedVUDS=a[8]&15,b.reserved1=(a[8]&48)>>4,b.reservedVSAE=!!((a[8]&64)>>6),b.vbsEnable=!!((a[8]&128)>>7),b.reserved3=a[9]&63,b.reserved2=(a[9]&192)>>6);1==b.sequenceNumber&&(b.vbsMeasurementDelaySec=a[1]&127,b.reserved1=(a[1]&128)>>
7,b.vbsUplinkDelaySec=a[2]&127,b.reserved2=(a[2]&128)>>7);return b}
function parseVoboXXGeneralConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;b.analogVoltage=parseFloat((a[1]/10).toFixed(1));b.powerTime=parseFloat((a[2]/10).toFixed(1));b.mbEnable=!!(a[3]&1);b.engUnitsEnable=!!(a[3]>>1&1);b.din1TransmitEnable=!!(a[3]>>2&1);b.din2TransmitEnable=!!(a[3]>>3&1);b.din3TransmitEnable=!!(a[3]>>4&1);b.wkupTransmitEnable=!!(a[3]>>5&1);b.ain1TransmitEnable=!!(a[3]>>6&1);b.ain2TransmitEnable=!!(a[3]>>7&1);b.ain3TransmitEnable=!!(a[4]&1);
b.batteryLevelTransmitEnable=!!(a[4]>>1&1);b.adcTemperatureTransmitEnable=!!(a[4]>>2&1);b.mbTransmitEnable=!!(a[4]>>3&1);b.ainPayloadType=a[4]>>4&1;b.reservedMAWE=!!(a[4]>>5&1);b.reservedMADE=!!(a[4]>>6&1);b.reservedMAME=!!(a[4]>>7&1);return b}
function parseVoboXXModbusGeneralConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;b.mbTimeout=a[2]<<8|a[1];b.mbBaud=a[3]&15;b.mbStopBits=a[3]>>4&3;b.mbParity=a[3]>>6&3;b.mbPayloadType=a[4]&3;b.reserved1=a[4]>>2&63;return b}
function parseVoboXXModbusGroupsEnableConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;6==b.subgroupID&&(b.mbFirstCycleG1=!!(a[1]&1),b.mbFirstCycleG2=!!(a[1]>>1&1),b.mbFirstCycleG3=!!(a[1]>>2&1),b.mbFirstCycleG4=!!(a[1]>>3&1),b.mbFirstCycleG5=!!(a[1]>>4&1),b.mbFirstCycleG6=!!(a[1]>>5&1),b.mbFirstCycleG7=!!(a[1]>>6&1),b.mbFirstCycleG8=!!(a[1]>>7&1),b.mbFirstCycleG9=!!(a[2]&1),b.mbFirstCycleG10=!!(a[2]>>1&1),b.mbFirstCycleG11=!!(a[2]>>2&1),b.mbFirstCycleG12=!!(a[2]>>
3&1),b.mbFirstCycleG13=!!(a[2]>>4&1),b.mbFirstCycleG14=!!(a[2]>>5&1),b.mbFirstCycleG15=!!(a[2]>>6&1),b.mbFirstCycleG16=!!(a[2]>>7&1),b.mbFirstCycleG17=!!(a[3]&1),b.mbFirstCycleG18=!!(a[3]>>1&1),b.mbFirstCycleG19=!!(a[3]>>2&1),b.mbFirstCycleG20=!!(a[3]>>3&1),b.mbFirstCycleG21=!!(a[3]>>4&1),b.mbFirstCycleG22=!!(a[3]>>5&1),b.mbFirstCycleG23=!!(a[3]>>6&1),b.mbFirstCycleG24=!!(a[3]>>7&1),b.mbFirstCycleG25=!!(a[4]&1),b.mbFirstCycleG26=!!(a[4]>>1&1),b.mbFirstCycleG27=!!(a[4]>>2&1),b.mbFirstCycleG28=!!(a[4]>>
3&1),b.mbFirstCycleG29=!!(a[4]>>4&1),b.mbFirstCycleG30=!!(a[4]>>5&1),b.mbFirstCycleG31=!!(a[4]>>6&1),b.mbFirstCycleG32=!!(a[4]>>7&1),b.mbFirstCycleG33=!!(a[5]&1),b.mbFirstCycleG34=!!(a[5]>>1&1),b.mbFirstCycleG35=!!(a[5]>>2&1),b.mbFirstCycleG36=!!(a[5]>>3&1),b.mbFirstCycleG37=!!(a[5]>>4&1),b.mbFirstCycleG38=!!(a[5]>>5&1),b.mbFirstCycleG39=!!(a[5]>>6&1),b.mbFirstCycleG40=!!(a[5]>>7&1),b.mbFirstCycleG41=!!(a[6]&1),b.reserved1=a[6]>>1&127);7==b.subgroupID&&(b.mbSubseqCyclesG1=!!(a[1]&1),b.mbSubseqCyclesG2=
!!(a[1]>>1&1),b.mbSubseqCyclesG3=!!(a[1]>>2&1),b.mbSubseqCyclesG4=!!(a[1]>>3&1),b.mbSubseqCyclesG5=!!(a[1]>>4&1),b.mbSubseqCyclesG6=!!(a[1]>>5&1),b.mbSubseqCyclesG7=!!(a[1]>>6&1),b.mbSubseqCyclesG8=!!(a[1]>>7&1),b.mbSubseqCyclesG9=!!(a[2]&1),b.mbSubseqCyclesG10=!!(a[2]>>1&1),b.mbSubseqCyclesG11=!!(a[2]>>2&1),b.mbSubseqCyclesG12=!!(a[2]>>3&1),b.mbSubseqCyclesG13=!!(a[2]>>4&1),b.mbSubseqCyclesG14=!!(a[2]>>5&1),b.mbSubseqCyclesG15=!!(a[2]>>6&1),b.mbSubseqCyclesG16=!!(a[2]>>7&1),b.mbSubseqCyclesG17=!!(a[3]&
1),b.mbSubseqCyclesG18=!!(a[3]>>1&1),b.mbSubseqCyclesG19=!!(a[3]>>2&1),b.mbSubseqCyclesG20=!!(a[3]>>3&1),b.mbSubseqCyclesG21=!!(a[3]>>4&1),b.mbSubseqCyclesG22=!!(a[3]>>5&1),b.mbSubseqCyclesG23=!!(a[3]>>6&1),b.mbSubseqCyclesG24=!!(a[3]>>7&1),b.mbSubseqCyclesG25=!!(a[4]&1),b.mbSubseqCyclesG26=!!(a[4]>>1&1),b.mbSubseqCyclesG27=!!(a[4]>>2&1),b.mbSubseqCyclesG28=!!(a[4]>>3&1),b.mbSubseqCyclesG29=!!(a[4]>>4&1),b.mbSubseqCyclesG30=!!(a[4]>>5&1),b.mbSubseqCyclesG31=!!(a[4]>>6&1),b.mbSubseqCyclesG32=!!(a[4]>>
7&1),b.mbSubseqCyclesG33=!!(a[5]&1),b.mbSubseqCyclesG34=!!(a[5]>>1&1),b.mbSubseqCyclesG35=!!(a[5]>>2&1),b.mbSubseqCyclesG36=!!(a[5]>>3&1),b.mbSubseqCyclesG37=!!(a[5]>>4&1),b.mbSubseqCyclesG38=!!(a[5]>>5&1),b.mbSubseqCyclesG39=!!(a[5]>>6&1),b.mbSubseqCyclesG40=!!(a[5]>>7&1),b.mbSubseqCyclesG41=!!(a[6]&1),b.reserved1=a[6]>>1&127);return b}
function parseVoboXXModbusGroupsConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;var c=(16*(b.subgroupID-8)+b.sequenceNumber+1).toString();b["mbFirstCycleG"+c]=!!(a[1]&1);b["mbSubseqCyclesG"+c]=!!(a[1]>>1&1);b["mbByteSwapG"+c]=!!(a[1]>>2&1);b["mbWordSwapG"+c]=!!(a[1]>>3&1);b["mbNumTypeG"+c]=a[1]>>4&3;b.reserved1=a[1]>>6&3;b["mbSlaveAddrG"+c]=a[2];b["mbStartAddrG"+c]=a[4]<<8|a[3];b["mbNumRegsG"+c]=a[5];b["mbWdataG"+c]=a[7]<<8|a[6];b["mbGrpDelayG"+c]=a[9]<<8|a[8];
b["mbFuncCodeG"+c]=a[10]&63;b.reserved2=a[10]>>6&3;return b}
function parseVoboXXModbusPayloadsSlotsConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber&&(b.mbGroupPaySlot0=a[1],b.mbRegPaySlot0=a[2],b.mbGroupPaySlot1=a[3],b.mbRegPaySlot1=a[4],b.mbGroupPaySlot2=a[5],b.mbRegPaySlot2=a[6],b.mbGroupPaySlot3=a[7],b.mbRegPaySlot3=a[8],b.mbGroupPaySlot4=a[9],b.mbRegPaySlot4=a[10]);1==b.sequenceNumber&&(b.mbGroupPaySlot5=a[1],b.mbRegPaySlot5=a[2],b.mbGroupPaySlot6=a[3],b.mbRegPaySlot6=a[4],b.mbGroupPaySlot7=a[5],
b.mbRegPaySlot7=a[6],b.mbGroupPaySlot8=a[7],b.mbRegPaySlot8=a[8],b.mbGroupPaySlot9=a[9],b.mbRegPaySlot9=a[10]);2==b.sequenceNumber&&(b.mbGroupPaySlot10=a[1],b.mbRegPaySlot10=a[2],b.mbGroupPaySlot11=a[3],b.mbRegPaySlot11=a[4],b.mbGroupPaySlot12=a[5],b.mbRegPaySlot12=a[6],b.mbGroupPaySlot13=a[7],b.mbRegPaySlot13=a[8],b.mbGroupPaySlot14=a[9],b.mbRegPaySlot14=a[10]);3==b.sequenceNumber&&(b.mbGroupPaySlot15=a[1],b.mbRegPaySlot15=a[2],b.mbGroupPaySlot16=a[3],b.mbRegPaySlot16=a[4],b.mbGroupPaySlot17=a[5],
b.mbRegPaySlot17=a[6],b.mbGroupPaySlot18=a[7],b.mbRegPaySlot18=a[8],b.mbGroupPaySlot19=a[9],b.mbRegPaySlot19=a[10]);4==b.sequenceNumber&&(b.mbGroupPaySlot20=a[1],b.mbRegPaySlot20=a[2],b.mbGroupPaySlot21=a[3],b.mbRegPaySlot21=a[4],b.mbGroupPaySlot22=a[5],b.mbRegPaySlot22=a[6],b.mbGroupPaySlot23=a[7],b.mbRegPaySlot23=a[8],b.mbGroupPaySlot24=a[9],b.mbRegPaySlot24=a[10]);5==b.sequenceNumber&&(b.mbGroupPaySlot25=a[1],b.mbRegPaySlot25=a[2],b.mbGroupPaySlot26=a[3],b.mbRegPaySlot26=a[4],b.mbGroupPaySlot27=
a[5],b.mbRegPaySlot27=a[6],b.mbGroupPaySlot28=a[7],b.mbRegPaySlot28=a[8],b.mbGroupPaySlot29=a[9],b.mbRegPaySlot29=a[10]);6==b.sequenceNumber&&(b.mbGroupPaySlot30=a[1],b.mbRegPaySlot30=a[2],b.mbGroupPaySlot31=a[3],b.mbRegPaySlot31=a[4],b.mbGroupPaySlot32=a[5],b.mbRegPaySlot32=a[6],b.mbGroupPaySlot33=a[7],b.mbRegPaySlot33=a[8],b.mbGroupPaySlot34=a[9],b.mbRegPaySlot34=a[10]);7==b.sequenceNumber&&(b.mbGroupPaySlot35=a[1],b.mbRegPaySlot35=a[2],b.mbGroupPaySlot36=a[3],b.mbRegPaySlot36=a[4],b.mbGroupPaySlot37=
a[5],b.mbRegPaySlot37=a[6],b.mbGroupPaySlot38=a[7],b.mbRegPaySlot38=a[8],b.mbGroupPaySlot39=a[9],b.mbRegPaySlot39=a[10]);8==b.sequenceNumber&&(b.mbGroupPaySlot40=a[1],b.mbRegPaySlot40=a[2]);return b}
function parseVoboXXEngineeringUnitsConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber&&(b.ain1UnitsCode=a[1],b.ain1MinValue=bytesToFloat32(a.slice(2,6)),b.ain1MaxValue=bytesToFloat32(a.slice(6,10)),b.ain1Type=a[10]&3,b.reserved1=a[10]>>2&63);1==b.sequenceNumber&&(b.ain1SeriesResistance=bytesToFloat32(a.slice(1,5)));2==b.sequenceNumber&&(b.ain1Gain=bytesToFloat32(a.slice(1,5)),b.ain1Offset=bytesToFloat32(a.slice(5,9)));3==b.sequenceNumber&&(b.ain2UnitsCode=
a[1],b.ain2MinValue=bytesToFloat32(a.slice(2,6)),b.ain2MaxValue=bytesToFloat32(a.slice(6,10)),b.ain2Type=a[10]&3,b.reserved1=a[10]>>2&63);4==b.sequenceNumber&&(b.ain2SeriesResistance=bytesToFloat32(a.slice(1,5)));5==b.sequenceNumber&&(b.ain2Gain=bytesToFloat32(a.slice(1,5)),b.ain2Offset=bytesToFloat32(a.slice(5,9)));6==b.sequenceNumber&&(b.ain3UnitsCode=a[1],b.ain3MinValue=bytesToFloat32(a.slice(2,6)),b.ain3MaxValue=bytesToFloat32(a.slice(6,10)),b.ain3Type=a[10]&3,b.reserved1=a[10]>>2&63);7==b.sequenceNumber&&
(b.ain3SeriesResistance=bytesToFloat32(a.slice(1,5)));8==b.sequenceNumber&&(b.ain3Gain=bytesToFloat32(a.slice(1,5)),b.ain3Offset=bytesToFloat32(a.slice(5,9)));return b}
function parseVoboTCGeneralConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber?(b.deviceType1=a[1]&7,b.enable1=!!((a[1]&8)>>3),b.deviceType2=(a[1]&112)>>4,b.enable2=!!((a[1]&128)>>7),b.deviceType3=a[2]&7,b.enable3=!!((a[2]&8)>>3),b.deviceType4=(a[2]&112)>>4,b.enable4=!!((a[2]&128)>>7),b.deviceType5=a[3]&7,b.enable5=!!((a[3]&8)>>3),b.deviceType6=(a[3]&112)>>4,b.enable6=!!((a[3]&128)>>7),b.deviceType7=a[4]&7,b.enable7=!!((a[4]&8)>>3),b.deviceType8=
(a[4]&112)>>4,b.enable8=!!((a[4]&128)>>7),b.deviceType9=a[5]&7,b.enable9=!!((a[5]&8)>>3),b.deviceType10=(a[5]&112)>>4,b.enable10=!!((a[5]&128)>>7),b.deviceType11=a[6]&7,b.enable11=!!((a[6]&8)>>3),b.deviceType12=(a[6]&112)>>4,b.enable12=!!((a[6]&128)>>7),b.deviceUnits1=a[7]&1,b.deviceUnits2=(a[7]&2)>>1,b.deviceUnits3=(a[7]&4)>>2,b.deviceUnits4=(a[7]&8)>>3,b.deviceUnits5=(a[7]&16)>>4,b.deviceUnits6=(a[7]&32)>>5,b.deviceUnits7=(a[7]&64)>>6,b.deviceUnits8=(a[7]&128)>>7,b.deviceUnits9=a[8]&1,b.deviceUnits10=
(a[8]&2)>>1,b.deviceUnits11=(a[8]&4)>>2,b.deviceUnits12=(a[8]&8)>>3,b.wkupSensorTransmitEnable=!!((a[8]&16)>>4),b.batterySensorTransmitEnable=!!((a[8]&32)>>5),b.coldJointSensorTransmitEnable=!!((a[8]&64)>>6),b.reserved1=(a[8]&128)>>7):1==b.sequenceNumber&&(b.deviceType1=a[1]&7,b.enable1=!!((a[1]&8)>>3),b.deviceType2=(a[1]&112)>>4,b.enable2=!!((a[1]&128)>>7),b.deviceType3=a[2]&7,b.enable3=!!((a[2]&8)>>3),b.deviceType4=(a[2]&112)>>4,b.enable4=!!((a[2]&128)>>7),b.deviceType5=a[3]&7,b.enable5=!!((a[3]&
8)>>3),b.deviceType6=(a[3]&112)>>4,b.enable6=!!((a[3]&128)>>7),b.deviceType7=a[4]&7,b.enable7=!!((a[4]&8)>>3),b.deviceType8=(a[4]&112)>>4,b.enable8=!!((a[4]&128)>>7),b.deviceType9=a[5]&7,b.enable9=!!((a[5]&8)>>3),b.deviceType10=(a[5]&112)>>4,b.enable10=!!((a[5]&128)>>7),b.deviceType11=a[6]&7,b.enable11=!!((a[6]&8)>>3),b.deviceType12=(a[6]&112)>>4,b.enable12=!!((a[6]&128)>>7),b.deviceUnits1=a[7]&3,b.deviceUnits2=(a[7]&12)>>2,b.deviceUnits3=(a[7]&48)>>4,b.deviceUnits4=(a[7]&192)>>6,b.deviceUnits5=a[8]&
3,b.deviceUnits6=(a[8]&12)>>2,b.deviceUnits7=(a[8]&48)>>4,b.deviceUnits8=(a[8]&192)>>6,b.deviceUnits9=a[9]&3,b.deviceUnits10=(a[9]&12)>>2,b.deviceUnits11=(a[9]&48)>>4,b.deviceUnits12=(a[9]&192)>>6,b.coldJointSensorUnits=a[10]&3,b.wkupSensorTransmitEnable=!!((a[10]&4)>>2),b.batterySensorTransmitEnable=!!((a[10]&8)>>3),b.coldJointSensorTransmitEnable=!!((a[10]&16)>>4),b.tcSensorsTransmitEnable=!!((a[10]&32)>>5),b.ainPayloadType=(a[10]&64)>>6,b.reserved1=(a[10]&128)>>7);return b}
function parseVoboTCCalibrationConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber&&(b.gain1=parseFloat((((a[2]&7)<<8|a[1])/1E3).toFixed(3)),b.reserved1=(a[2]&248)>>3,b.offset1=parseFloat((((a[4]&127)<<8|a[3])/1E3-10).toFixed(3)),b.reserved2=(a[4]&128)>>7,b.gain2=parseFloat((((a[6]&7)<<8|a[5])/1E3).toFixed(3)),b.reserved3=(a[6]&248)>>3,b.offset2=parseFloat((((a[8]&127)<<8|a[7])/1E3-10).toFixed(3)),b.reserved4=(a[8]&128)>>7);1==b.sequenceNumber&&
(b.gain3=parseFloat((((a[2]&7)<<8|a[1])/1E3).toFixed(3)),b.reserved1=(a[2]&248)>>3,b.offset3=parseFloat((((a[4]&127)<<8|a[3])/1E3-10).toFixed(3)),b.reserved2=(a[4]&128)>>7,b.gain4=parseFloat((((a[6]&7)<<8|a[5])/1E3).toFixed(3)),b.reserved3=(a[6]&248)>>3,b.offset4=parseFloat((((a[8]&127)<<8|a[7])/1E3-10).toFixed(3)),b.reserved4=(a[8]&128)>>7);2==b.sequenceNumber&&(b.gain5=parseFloat((((a[2]&7)<<8|a[1])/1E3).toFixed(3)),b.reserved1=(a[2]&248)>>3,b.offset5=parseFloat((((a[4]&127)<<8|a[3])/1E3-10).toFixed(3)),
b.reserved2=(a[4]&128)>>7,b.gain6=parseFloat((((a[6]&7)<<8|a[5])/1E3).toFixed(3)),b.reserved3=(a[6]&248)>>3,b.offset6=parseFloat((((a[8]&127)<<8|a[7])/1E3-10).toFixed(3)),b.reserved4=(a[8]&128)>>7);3==b.sequenceNumber&&(b.gain7=parseFloat((((a[2]&7)<<8|a[1])/1E3).toFixed(3)),b.reserved1=(a[2]&248)>>3,b.offset7=parseFloat((((a[4]&127)<<8|a[3])/1E3-10).toFixed(3)),b.reserved2=(a[4]&128)>>7,b.gain8=parseFloat((((a[6]&7)<<8|a[5])/1E3).toFixed(3)),b.reserved3=(a[6]&248)>>3,b.offset8=parseFloat((((a[8]&
127)<<8|a[7])/1E3-10).toFixed(3)),b.reserved4=(a[8]&128)>>7);4==b.sequenceNumber&&(b.gain9=parseFloat((((a[2]&7)<<8|a[1])/1E3).toFixed(3)),b.reserved1=(a[2]&248)>>3,b.offset9=parseFloat((((a[4]&127)<<8|a[3])/1E3-10).toFixed(3)),b.reserved2=(a[4]&128)>>7,b.gain10=parseFloat((((a[6]&7)<<8|a[5])/1E3).toFixed(3)),b.reserved3=(a[6]&248)>>3,b.offset10=parseFloat((((a[8]&127)<<8|a[7])/1E3-10).toFixed(3)),b.reserved4=(a[8]&128)>>7);5==b.sequenceNumber&&(b.gain11=parseFloat((((a[2]&7)<<8|a[1])/1E3).toFixed(3)),
b.reserved1=(a[2]&248)>>3,b.offset11=parseFloat((((a[4]&127)<<8|a[3])/1E3-10).toFixed(3)),b.reserved2=(a[4]&128)>>7,b.gain12=parseFloat((((a[6]&7)<<8|a[5])/1E3).toFixed(3)),b.reserved3=(a[6]&248)>>3,b.offset12=parseFloat((((a[8]&127)<<8|a[7])/1E3-10).toFixed(3)),b.reserved4=(a[8]&128)>>7);return b}
function parseVoboXPGeneralConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber&&(b.analogVoltage=parseFloat((a[1]/10).toFixed(1)),b.powerTime=parseFloat((a[2]/10).toFixed(1)),b.mbEnable=!!(a[3]&1),b.reserved1=a[3]>>1&127,b.reserved2=a[4]&7,b.mbTransmitEnable=!!(a[4]>>3&1),b.ainPayloadType=a[4]>>4&1,b.reservedMAWE=!!(a[4]>>5&1),b.reservedMADE=!!(a[4]>>6&1),b.reservedMAME=!!(a[4]>>7&1),b.reservedDTC=a[6]<<8|a[5]);1==b.sequenceNumber&&(b.stateRLY1=
a[1]&1,b.stateRLY2=a[1]>>1&1,b.stateRLY3=a[1]>>2&1,b.stateRLY4=a[1]>>3&1,b.reserved1=a[1]>>4&15,b.lorawanClass=a[2]&1,b.contMeasEnable=!!(a[2]>>1&1),b.reservedARDE=!!(a[2]>>2&1),b.pFailWarnEnable=!!(a[2]>>3&1),b.pcntDin1Enable=!!(a[2]>>4&1),b.pcntDin2Enable=!!(a[2]>>5&1),b.reserved2=a[2]>>6&3,b.pcntDin1Type=a[3]&3,b.pcntDin2Type=a[3]>>2&3,b.reserved3=a[3]>>4&15,b.pcntPeriod=a[4]&63,b.reserved4=a[4]>>6&3,b.contMeasCycleTime=a[5]&63,b.reserved5=a[5]>>6&3,b.pFailThreshold=parseFloat((a[6]/10).toFixed(1)),
b.serialPHY=a[7]&1,b.reserved6=a[7]>>1&7,b.serialProtoRS485=a[7]>>4&1,b.reserved7=a[7]>>5&1,b.serialProtoRS232=a[7]>>6&1,b.reserved8=a[7]>>7&1);return b}
function parseVoboXPTransmitEncodingConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;b.txAin1=a[1]&15;b.txAin2=a[1]>>4&15;b.txAin3=a[2]&15;b.txDin1=a[2]>>4&15;b.txDin2=a[3]&15;b.txPcntDin1=a[3]>>4&15;b.txPcntDin2=a[4]&15;b.txWKUP=a[4]>>4&15;b.txTemp=a[5]&15;b.txVoltRLY1=a[5]>>4&15;b.txVoltRLY2=a[6]&15;b.txVoltRLY3=a[6]>>4&15;b.txVoltRLY4=a[7]&15;b.txVoltVIN=a[7]>>4&15;b.txVolt3V3=a[8]&15;b.txVoltVPP=a[8]>>4&15;b.txContMeasPeriod=a[9]&15;b.txContMeasCnt=a[9]>>4&
1;b.reserved1=a[9]>>5&7;return b}function parseVoboXPRelayPulseConfigurationPayload(a){var b={};b.subgroupID=a[0]&15;b.sequenceNumber=(a[0]&240)>>4;0==b.sequenceNumber?(b.pulseDelayRLY1=a[2]<<8|a[1],b.pulsePeriodRLY1=a[4]<<8|a[3],b.pulseDelayRLY2=a[6]<<8|a[5],b.pulsePeriodRLY2=a[8]<<8|a[7]):1==b.sequenceNumber&&(b.pulseDelayRLY3=a[2]<<8|a[1],b.pulsePeriodRLY3=a[4]<<8|a[3],b.pulseDelayRLY4=a[6]<<8|a[5],b.pulsePeriodRLY4=a[8]<<8|a[7]);return b}
function parseConfigurationPayload(a,b){var c={},d=a[0]&15;0==d?c=parseVoboLibGeneralConfigurationPayload(a,b):1==d?c=parseVoboLibVoboSyncConfigurationPayload(a):70==b&&4==d?c=parseVoboXXGeneralConfigurationPayload(a):70==b&&5==d?c=parseVoboXXModbusGeneralConfigurationPayload(a):70!=b||6!=d&&7!=d?70!=b||8!=d&&9!=d&&10!=d?70==b&&11==d?c=parseVoboXXModbusPayloadsSlotsConfigurationPayload(a):70==b&&12==d?c=parseVoboXXEngineeringUnitsConfigurationPayload(a):71==b&&4==d?c=parseVoboTCGeneralConfigurationPayload(a):
71==b&&5==d?c=parseVoboTCCalibrationConfigurationPayload(a):72==b&&4==d?c=parseVoboXPGeneralConfigurationPayload(a):72==b&&5==d?c=parseVoboXXModbusGeneralConfigurationPayload(a):72!=b||6!=d&&7!=d?72!=b||8!=d&&9!=d&&10!=d?72==b&&11==d?c=parseVoboXXModbusPayloadsSlotsConfigurationPayload(a):72==b&&12==d?c=parseVoboXXEngineeringUnitsConfigurationPayload(a):72==b&&13==d?c=parseVoboXPTransmitEncodingConfigurationPayload(a):72==b&&14==d&&(c=parseVoboXPRelayPulseConfigurationPayload(a)):c=parseVoboXXModbusGroupsConfigurationPayload(a):
c=parseVoboXXModbusGroupsEnableConfigurationPayload(a):c=parseVoboXXModbusGroupsConfigurationPayload(a):c=parseVoboXXModbusGroupsEnableConfigurationPayload(a);return c}
function parseModbusGenericPayload(a,b){b={};for(var c=a.length,d=0;d<c-1;){var e=a[d]&63;if(0<e){var f=a[d]>>6&3;d++;if(0==f){var g=a[d+1]<<8|a[d];b["group"+e+"register1"]=g;d+=2}else if(1==f)b["group"+e+"register1"]=a[d+1]<<8|a[d],b["group"+e+"register2"]=a[d+3]<<8|a[d+2],d+=4;else if(2==f){f=[];var h=a[d]&127;d++;for(var k=0;k<h;k++)g=a[d+1]<<8|a[d],b["group"+e+"register"+(k+1)]=g,f.push(g),d+=2}else if(3==f){f=[];h=a[d]&127;d++;k=a[d]&127;d++;h-=k;g=Math.floor((c-d)/2);h>g&&(h=g);for(let l=0;l<
h;l++)g=a[d+1]<<8|a[d],b["group"+e+"register"+(k+l+1)]=g,f.push(g),d+=2}}else break}return b}function parseAnalogInputVariableLengthPayload(a,b){b={};for(var c=[],d=a.length,e=0;e<d;){var f=a.slice(e,e+6);f=parseOneAnalogSensorPayload(f);c.push(f);e+=6}b.ainPayloads=c;b.numOfAinPayloads=c.length;return b}
function parseModbusStandardVariableLengthPayload(a,b){b={};for(var c={},d=a.length,e=a[d-1],f=0;f<d-1;)c["Modbus"+(e+f/2)]=a[f+1]<<8|a[f],f+=2;b.modbusSlots=c;b.firstSlotNum=e;b.numModbusSlots=(d-1)/2;return b}
function lookupAnalogSensorName(a,b){var c=[{"Analog Sensor Number":"0","Analog Sensor Name":"Battery Voltage"},{"Analog Sensor Number":"1","Analog Sensor Name":"AIN1"},{"Analog Sensor Number":"2","Analog Sensor Name":"AIN2"},{"Analog Sensor Number":"3","Analog Sensor Name":"AIN3"},{"Analog Sensor Number":"15","Analog Sensor Name":"ADC Temperature"}];const d=[{"Analog Sensor Number":"0","Analog Sensor Name":"Battery Voltage"},{"Analog Sensor Number":"1","Analog Sensor Name":"TC1"},{"Analog Sensor Number":"2",
"Analog Sensor Name":"TC2"},{"Analog Sensor Number":"3","Analog Sensor Name":"TC3"},{"Analog Sensor Number":"4","Analog Sensor Name":"TC4"},{"Analog Sensor Number":"5","Analog Sensor Name":"TC5"},{"Analog Sensor Number":"6","Analog Sensor Name":"TC6"},{"Analog Sensor Number":"7","Analog Sensor Name":"TC7"},{"Analog Sensor Number":"8","Analog Sensor Name":"TC8"},{"Analog Sensor Number":"9","Analog Sensor Name":"TC9"},{"Analog Sensor Number":"10","Analog Sensor Name":"TC10"},{"Analog Sensor Number":"11",
"Analog Sensor Name":"TC11"},{"Analog Sensor Number":"12","Analog Sensor Name":"TC12"},{"Analog Sensor Number":"13","Analog Sensor Name":"Cold Joint Temperature"}],e=[{"Analog Sensor Number":"0","Analog Sensor Name":"3.3V Supply Voltage"},{"Analog Sensor Number":"1","Analog Sensor Name":"AIN1"},{"Analog Sensor Number":"2","Analog Sensor Name":"AIN2"},{"Analog Sensor Number":"3","Analog Sensor Name":"AIN3"},{"Analog Sensor Number":"4","Analog Sensor Name":"DIN1"},{"Analog Sensor Number":"5","Analog Sensor Name":"DIN1 Pulse Count"},
{"Analog Sensor Number":"6","Analog Sensor Name":"DIN2"},{"Analog Sensor Number":"7","Analog Sensor Name":"DIN2 Pulse Count"},{"Analog Sensor Number":"8","Analog Sensor Name":"RLY1 Voltage"},{"Analog Sensor Number":"9","Analog Sensor Name":"RLY2 Voltage"},{"Analog Sensor Number":"10","Analog Sensor Name":"RLY3 Voltage"},{"Analog Sensor Number":"11","Analog Sensor Name":"RLY4 Voltage"},{"Analog Sensor Number":"12","Analog Sensor Name":"WKUP"},{"Analog Sensor Number":"13","Analog Sensor Name":"VPP Voltage"},
{"Analog Sensor Number":"14","Analog Sensor Name":"VIN Voltage"},{"Analog Sensor Number":"15","Analog Sensor Name":"ADC Temperature"},{"Analog Sensor Number":"16","Analog Sensor Name":"Cont Meas Period"},{"Analog Sensor Number":"17","Analog Sensor Name":"Cont Meas Count"}];var f=[],g="";if("VoBoXX"==a)f=c;else if("VoBoTC"==a)f=d;else if("VoBoXP"==a)f=e,c=(b&192)>>6,1==c?g=" (Max)":2==c?g=" (Min)":3==c&&(g=" (Avg)"),b&=63;else throw errorMsg=a+' -- Invalid VoBo Type. Use "VoBoXX", "VoBoTC" or "VoBoXP"',
Error(errorMsg);f=f.find(h=>h["Analog Sensor Number"]==b.toString());if("undefined"==typeof f)return"AnalogSensor"+b.toString();f=f["Analog Sensor Name"];"VoBoXP"==a&&(f+=g);return f}
function lookupDigitalSensorName(a,b){const c=[{"Digital Sensor Number":"0","Digital Sensor Name":"WKUP"},{"Digital Sensor Number":"1","Digital Sensor Name":"DIN1"},{"Digital Sensor Number":"2","Digital Sensor Name":"DIN2"},{"Digital Sensor Number":"3","Digital Sensor Name":"DIN3"}],d=[{"Digital Sensor Number":"0","Digital Sensor Name":"WKUP"}],e=[{"Digital Sensor Number":"0","Digital Sensor Name":"WKUP"},{"Digital Sensor Number":"1","Digital Sensor Name":"DIN1"},{"Digital Sensor Number":"2","Digital Sensor Name":"DIN2"}];
var f=[];if("VoBoXX"==a)f=c;else if("VoBoTC"==a)f=d;else if("VoBoXP"==a)f=e;else throw errorMsg=a+' -- Invalid VoBo Type. Use "VoBoXX", "VoBoTC" or "VoBoXP"',Error(errorMsg);a=f.find(g=>g["Digital Sensor Number"]==b.toString());return"undefined"==typeof a?"DigitalSensor"+b.toString():a["Digital Sensor Name"]}
function lookupUnits(a,b){var c="";c=[{"Units Code":"1",Description:"inches of water at 20 degC (68 degF)","Abbreviated Units":"inH2O (20 degC or 68 degF)"},{"Units Code":"2",Description:"inches of mercury at 0 degC (32 degF)","Abbreviated Units":"inHg (20 degC or 68 degF)"},{"Units Code":"3",Description:"feet of water at 20 degC (68 degF)","Abbreviated Units":"ftH2O (20 degC or 68 degF)"},{"Units Code":"4",Description:"millimeters of water at 20 degC (68 degF)","Abbreviated Units":"mmH2O (20 degC or 68 degF)"},
{"Units Code":"5",Description:"millimeters of mercury at 0 degC (32 degF)","Abbreviated Units":"mmHg (0 degC or 32 degF)"},{"Units Code":"6",Description:"pounds per square inch","Abbreviated Units":"psi"},{"Units Code":"7",Description:"bars","Abbreviated Units":"bar"},{"Units Code":"8",Description:"millibars","Abbreviated Units":"mbar"},{"Units Code":"9",Description:"grams per square centimeter","Abbreviated Units":"g/cm^2"},{"Units Code":"10",Description:"kilograms per square centimeter","Abbreviated Units":"kg/cm^2"},
{"Units Code":"11",Description:"pascals","Abbreviated Units":"Pa"},{"Units Code":"12",Description:"kilopascals","Abbreviated Units":"kPa"},{"Units Code":"13",Description:"torr","Abbreviated Units":"torr"},{"Units Code":"14",Description:"atmospheres","Abbreviated Units":"atm"},{"Units Code":"15",Description:"cubic feet per minute","Abbreviated Units":"ft^3/min"},{"Units Code":"16",Description:"gallons per minute","Abbreviated Units":"usg/min"},{"Units Code":"17",Description:"liters per minute","Abbreviated Units":"L/min"},
{"Units Code":"18",Description:"imperial gallons per minute","Abbreviated Units":"impgal/min"},{"Units Code":"19",Description:"cubic meter per hour","Abbreviated Units":"m^3/h"},{"Units Code":"20",Description:"feet per second","Abbreviated Units":"ft/s"},{"Units Code":"21",Description:"meters per seond","Abbreviated Units":"m/s"},{"Units Code":"22",Description:"gallons per second","Abbreviated Units":"usg/s"},{"Units Code":"23",Description:"million gallons per day","Abbreviated Units":"Musg/d"},{"Units Code":"24",
Description:"liters per second","Abbreviated Units":"L/s"},{"Units Code":"25",Description:"million liters per day","Abbreviated Units":"ML/d"},{"Units Code":"26",Description:"cubic feet per second","Abbreviated Units":"ft^3/s"},{"Units Code":"27",Description:"cubic feet per day","Abbreviated Units":"ft^3/d"},{"Units Code":"28",Description:"cubic meters per second","Abbreviated Units":"m^3/s"},{"Units Code":"29",Description:"cubic meters per day","Abbreviated Units":"m^3/d"},{"Units Code":"30",Description:"imperial gallons per hour",
"Abbreviated Units":"impgal/h"},{"Units Code":"31",Description:"imperial gallons per day","Abbreviated Units":"impgal/d"},{"Units Code":"32",Description:"Degrees Celsius","Abbreviated Units":"C"},{"Units Code":"33",Description:"Degrees Fahrenheit","Abbreviated Units":"F"},{"Units Code":"34",Description:"Degrees Rankine","Abbreviated Units":"R"},{"Units Code":"35",Description:"Kelvin","Abbreviated Units":"K"},{"Units Code":"36",Description:"millivolts","Abbreviated Units":"mV"},{"Units Code":"37",
Description:"ohms","Abbreviated Units":"ohm"},{"Units Code":"38",Description:"hertz","Abbreviated Units":"hz"},{"Units Code":"39",Description:"milliamperes","Abbreviated Units":"mA"},{"Units Code":"40",Description:"gallons","Abbreviated Units":"usg"},{"Units Code":"41",Description:"liters","Abbreviated Units":"L"},{"Units Code":"42",Description:"imperial gallons","Abbreviated Units":"impgal"},{"Units Code":"43",Description:"cubic meters","Abbreviated Units":"m^3"},{"Units Code":"44",Description:"feet",
"Abbreviated Units":"ft"},{"Units Code":"45",Description:"meters","Abbreviated Units":"m"},{"Units Code":"46",Description:"barrels","Abbreviated Units":"bbl"},{"Units Code":"47",Description:"inches","Abbreviated Units":"in"},{"Units Code":"48",Description:"centimeters","Abbreviated Units":"cm"},{"Units Code":"49",Description:"millimeters","Abbreviated Units":"mm"},{"Units Code":"50",Description:"minutes","Abbreviated Units":"min"},{"Units Code":"51",Description:"seconds","Abbreviated Units":"s"},
{"Units Code":"52",Description:"hours","Abbreviated Units":"h"},{"Units Code":"53",Description:"days","Abbreviated Units":"d"},{"Units Code":"54",Description:"centistokes","Abbreviated Units":"centistokes"},{"Units Code":"55",Description:"centipoise","Abbreviated Units":"cP"},{"Units Code":"56",Description:"microsiemens","Abbreviated Units":"microsiemens"},{"Units Code":"57",Description:"percent","Abbreviated Units":"%"},{"Units Code":"58",Description:"volts","Abbreviated Units":"V"},{"Units Code":"59",
Description:"pH","Abbreviated Units":"pH"},{"Units Code":"60",Description:"grams","Abbreviated Units":"g"},{"Units Code":"61",Description:"kilograms","Abbreviated Units":"kg"},{"Units Code":"62",Description:"metric tons","Abbreviated Units":"t"},{"Units Code":"63",Description:"pounds","Abbreviated Units":"lb"},{"Units Code":"64",Description:"short tons","Abbreviated Units":"short ton"},{"Units Code":"65",Description:"long tons","Abbreviated Units":"long ton"},{"Units Code":"66",Description:"millisiemens per centimeter",
"Abbreviated Units":"millisiemens/cm"},{"Units Code":"67",Description:"microsiemens per centimeter","Abbreviated Units":"microsiemens/cm"},{"Units Code":"68",Description:"newton","Abbreviated Units":"N"},{"Units Code":"69",Description:"newton meter","Abbreviated Units":"N m"},{"Units Code":"70",Description:"grams per second","Abbreviated Units":"g/s"},{"Units Code":"71",Description:"grams per minute","Abbreviated Units":"g/min"},{"Units Code":"72",Description:"grams per hour","Abbreviated Units":"g/h"},
{"Units Code":"73",Description:"kilograms per second","Abbreviated Units":"kg/s"},{"Units Code":"74",Description:"kilograms per minute","Abbreviated Units":"kg/min"},{"Units Code":"75",Description:"kilograms per hour","Abbreviated Units":"kg/h"},{"Units Code":"76",Description:"kilograms per day","Abbreviated Units":"kg/d"},{"Units Code":"77",Description:"metric tons per minute","Abbreviated Units":"t/min"},{"Units Code":"78",Description:"metric tons per hour","Abbreviated Units":"t/h"},{"Units Code":"79",
Description:"metric tons per day","Abbreviated Units":"t/d"},{"Units Code":"80",Description:"pounds per second","Abbreviated Units":"lb/s"},{"Units Code":"81",Description:"pounds per minute","Abbreviated Units":"lb/min"},{"Units Code":"82",Description:"pounds per hour","Abbreviated Units":"lb/h"},{"Units Code":"83",Description:"pounds per day","Abbreviated Units":"lb/d"},{"Units Code":"84",Description:"short tons per minute","Abbreviated Units":"short ton/min"},{"Units Code":"85",Description:"short tons per hour",
"Abbreviated Units":"short ton/h"},{"Units Code":"86",Description:"short tons per day","Abbreviated Units":"short ton/d"},{"Units Code":"87",Description:"long tons per hour","Abbreviated Units":"long ton/h"},{"Units Code":"88",Description:"long tons per day","Abbreviated Units":"long ton/d"},{"Units Code":"89",Description:"deka therm","Abbreviated Units":"Dth"},{"Units Code":"90",Description:"specific gravity units","Abbreviated Units":"specific gravity units"},{"Units Code":"91",Description:"grams per cubic centimeter",
"Abbreviated Units":"g/cm^3"},{"Units Code":"92",Description:"kilograms per cubic meter","Abbreviated Units":"kg/m^3"},{"Units Code":"93",Description:"pounds per gallon","Abbreviated Units":"lb/usg"},{"Units Code":"94",Description:"pounds per cubic feet","Abbreviated Units":"lb/ft^3"},{"Units Code":"95",Description:"grams per milliliter","Abbreviated Units":"g/mL"},{"Units Code":"96",Description:"kilograms per liter","Abbreviated Units":"kg/L"},{"Units Code":"97",Description:"grams per liter","Abbreviated Units":"g/L"},
{"Units Code":"98",Description:"pounds per cubic inch","Abbreviated Units":"lb/in^3"},{"Units Code":"99",Description:"short tons per cubic yard","Abbreviated Units":"short ton/yd^3"},{"Units Code":"100",Description:"degrees twaddell","Abbreviated Units":"degTw"},{"Units Code":"101",Description:"degrees brix","Abbreviated Units":"degBx"},{"Units Code":"102",Description:"degrees baume heavy","Abbreviated Units":"BH"},{"Units Code":"103",Description:"degrees baume light","Abbreviated Units":"BL"},{"Units Code":"104",
Description:"degrees API","Abbreviated Units":"degAPI"},{"Units Code":"105",Description:"percent solids per weight","Abbreviated Units":"% solid/weight"},{"Units Code":"106",Description:"percent solids per volume","Abbreviated Units":"% solid/volume"},{"Units Code":"107",Description:"degrees balling","Abbreviated Units":"degrees balling"},{"Units Code":"108",Description:"proof per volume","Abbreviated Units":"proof/volume"},{"Units Code":"109",Description:"proof per mass","Abbreviated Units":"proof/mass"},
{"Units Code":"110",Description:"bushels","Abbreviated Units":"bushel"},{"Units Code":"111",Description:"cubic yards","Abbreviated Units":"yd^3"},{"Units Code":"112",Description:"cubic feet","Abbreviated Units":"ft^3"},{"Units Code":"113",Description:"cubic inches","Abbreviated Units":"in^3"},{"Units Code":"114",Description:"inches per second","Abbreviated Units":"in/s"},{"Units Code":"115",Description:"inches per minute","Abbreviated Units":"in/min"},{"Units Code":"116",Description:"feet per minute",
"Abbreviated Units":"ft/min"},{"Units Code":"117",Description:"degrees per second","Abbreviated Units":"deg/s"},{"Units Code":"118",Description:"revolutions per second","Abbreviated Units":"rev/s"},{"Units Code":"119",Description:"revolutions per minute","Abbreviated Units":"rpm"},{"Units Code":"120",Description:"meters per hour","Abbreviated Units":"m/hr"},{"Units Code":"121",Description:"normal cubic meters per hour","Abbreviated Units":"normal m^3/h"},{"Units Code":"122",Description:"normal liter per hour",
"Abbreviated Units":"normal L/h"},{"Units Code":"123",Description:"standard cubic feet per minute","Abbreviated Units":"standard ft^3/min"},{"Units Code":"124",Description:"bbl liq","Abbreviated Units":"bbl liq"},{"Units Code":"125",Description:"ounce","Abbreviated Units":"oz"},{"Units Code":"126",Description:"foot pound force","Abbreviated Units":"ft lb force"},{"Units Code":"127",Description:"kilowatt","Abbreviated Units":"kW"},{"Units Code":"128",Description:"kilowatt hour","Abbreviated Units":"KWh"},
{"Units Code":"129",Description:"horsepower","Abbreviated Units":"hp"},{"Units Code":"130",Description:"cubic feet per hour","Abbreviated Units":"ft^3/h"},{"Units Code":"131",Description:"cubic meters per minute","Abbreviated Units":"m^3/min"},{"Units Code":"132",Description:"barrels per second","Abbreviated Units":"bbl/s"},{"Units Code":"133",Description:"barrels per minute","Abbreviated Units":"bbl/min"},{"Units Code":"134",Description:"barrels per hour","Abbreviated Units":"bbl/h"},{"Units Code":"135",
Description:"barrels per day","Abbreviated Units":"bbl/d"},{"Units Code":"136",Description:"gallons per hour","Abbreviated Units":"usg/h"},{"Units Code":"137",Description:"imperial gallons per second","Abbreviated Units":"impgal/s"},{"Units Code":"138",Description:"liters per hour","Abbreviated Units":"L/h"},{"Units Code":"139",Description:"parts per million","Abbreviated Units":"ppm"},{"Units Code":"140",Description:"megacalorie per hour","Abbreviated Units":"Mcal/h"},{"Units Code":"141",Description:"megajoule per hour",
"Abbreviated Units":"MJ/h"},{"Units Code":"142",Description:"British thermal unit per hour","Abbreviated Units":"BTU/h"},{"Units Code":"143",Description:"degrees","Abbreviated Units":"degrees"},{"Units Code":"144",Description:"radian","Abbreviated Units":"rad"},{"Units Code":"145",Description:"inches of water at 15.6 degC (60 degF)","Abbreviated Units":"inH20 (15.6 degC or 60 degF)"},{"Units Code":"146",Description:"micrograms per liter","Abbreviated Units":"micrograms/L"},{"Units Code":"147",Description:"micrograms per cubic meter",
"Abbreviated Units":"micrograms/m^3"},{"Units Code":"148",Description:"percent consitency","Abbreviated Units":"% consistency"},{"Units Code":"149",Description:"volume percent","Abbreviated Units":"volume %"},{"Units Code":"150",Description:"percent steam quality","Abbreviated Units":"% steam quality"},{"Units Code":"151",Description:"feet in sixteenths","Abbreviated Units":"ft in sixteenths"},{"Units Code":"152",Description:"cubic feet per pound","Abbreviated Units":"ft^3/lb"},{"Units Code":"153",
Description:"picofarads","Abbreviated Units":"pF"},{"Units Code":"154",Description:"milliliters per liter","Abbreviated Units":"mL/L"},{"Units Code":"155",Description:"microliters per liter","Abbreviated Units":"microliters/L"},{"Units Code":"156",Description:"percent plato","Abbreviated Units":"% plato"},{"Units Code":"157",Description:"percent lower explosion level","Abbreviated Units":"% lower explosion level"},{"Units Code":"158",Description:"mega calorie","Abbreviated Units":"Mcal"},{"Units Code":"159",
Description:"kiloohms","Abbreviated Units":"kohm"},{"Units Code":"160",Description:"megajoule","Abbreviated Units":"MJ"},{"Units Code":"161",Description:"British thermal unit","Abbreviated Units":"BTU"},{"Units Code":"162",Description:"normal cubic meter","Abbreviated Units":"normal m^3"},{"Units Code":"163",Description:"normal liter","Abbreviated Units":"normal L"},{"Units Code":"164",Description:"standard cubic feet","Abbreviated Units":"normal ft^3"},{"Units Code":"165",Description:"parts per billion",
"Abbreviated Units":"parts/billion"},{"Units Code":"166",Description:"ampere","Abbreviated Units":"A"},{"Units Code":"167",Description:"millimeters per meter","Abbreviated Units":"mm/m"},{"Units Code":"168",Description:"seconds since epoch","Abbreviated Units":"epoch sec"},{"Units Code":"169",Description:"no units","Abbreviated Units":"no units"},{"Units Code":"170",Description:"percentage","Abbreviated Units":"%"},{"Units Code":"171",Description:"kilohertz","Abbreviated Units":"khz"},{"Units Code":"235",
Description:"gallons per day","Abbreviated Units":"usg/d"},{"Units Code":"236",Description:"hectoliters","Abbreviated Units":"hL"},{"Units Code":"237",Description:"megapascals","Abbreviated Units":"MPa"},{"Units Code":"238",Description:"inches of water at 4 degC (39.2 degF)","Abbreviated Units":"inH2O (4 degC or 39.2 degF)"},{"Units Code":"239",Description:"millimeters of water at 4 degC (39.2 degF)","Abbreviated Units":"mmH2O (4 degC or 39.2 degF)"},{"Units Code":"253",Description:"edge count or pulse count",
"Abbreviated Units":"counts"},{"Units Code":"254",Description:"raw ADC code","Abbreviated Units":"ADC code"},{"Units Code":"255",Description:"data not valid","Abbreviated Units":"data not valid"}].find(d=>d["Units Code"]==b.toString());if("undefined"==typeof c)return"Unknown Units";if(0==a)c=c.Description;else if(1==a)c=c["Abbreviated Units"];else throw errorMsg=a+" -- Invalid Output Type. Use 0 for Description or 1 for Abbreviated Units.",Error(errorMsg);return c};

//===========================================================
// Changes made to decoder for TagoIO below this point. 
// TagoIO executes the decoder file (payload.js) rather than
// calling the Decoder function, so code must be added here 
// to map the arguments to the Decoder function, and the 
// exports had to be commented out.
//===========================================================

const payload_vb = payload.find((x) => x.variable === "payload_raw" || x.variable === "payload" || x.variable === "data");
const fPort_vb = payload.find((x) => x.variable === "port" || x.variable === "fPort" || x.variable === "fport" || x.variable === "FPort")?.value;

if (payload_vb) {
    try {
        const buffer = Buffer.from(payload_vb.value, "hex")
        const decoded = toTagoFormat(buffer, fPort_vb);
        payload = payload.concat(decoded);
    } catch (error) {
        console.error(error);
        payload = [{ variable: "parse_error", value: error.message }];
    }
}